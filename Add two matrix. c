//add two matric

#include <stdio.h>

struct mat {
    int arr[10][10];
    int r, c;
};

typedef struct mat matrix;

matrix add_matrix(matrix *a, matrix *b) {
    int i, j;
    matrix s;
    printf("Enter the dimension of the first matrix: ");
    scanf("%d %d", &a->r, &a->c);
    printf("Enter the elements of the first matrix: ");
    for (i = 0; i < a->r; i++)
        for (j = 0; j < a->c; j++)
            scanf("%d", &a->arr[i][j]);

    printf("Enter the dimension of the second matrix: ");
    scanf("%d %d", &b->r, &b->c);
    printf("Enter the elements of the second matrix: ");
    for (i = 0; i < b->r; i++)
        for (j = 0; j < b->c; j++)
            scanf("%d", &b->arr[i][j]);

    if (a->r == b->r && a->c == b->c) {
        s.r = a->r;
        s.c = a->c;
        for (i = 0; i < a->r; i++) {
            for (j = 0; j < a->c; j++) {
                s.arr[i][j] = a->arr[i][j] + b->arr[i][j];
            }
        }
        return s;
    } else {
        s.r = s.c = 0;
        return s;
    }
}

int main() {
    matrix a, b, c;
    c = add_matrix(&a, &b);

    if (c.r == 0) {
        printf("Matrix dimensions do not match. Addition is not possible.\n");
    } else {
        printf("Resultant matrix after addition:\n");
        for (int i = 0; i < c.r; i++) {
            for (int j = 0; j < c.c; j++) {
                printf("%d ", c.arr[i][j]);
            }
            printf("\n");
        }
    }

    return 0;
}

